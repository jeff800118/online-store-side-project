-------隨手筆記: 分頁設計------
(一)設定參數

1、pageNum : 總頁數
2、pageSize :  一頁想顯示的數據
3、totalPage : 所有分頁的數據 ==>  Math.ceil(this.data.length / pageSize)
4、dataShow : slice this.data的新數組，提供給頁面做每頁的渲染  ==> 用數組表示 []
5、currentPage : 默認當前顯示頁面，設定為0

(二)操作

1、請求數據
this.axios.get/post(url).then((res)=>{
    console.log(res)
    this.data = res.data

    ---計算總頁數totalPage---
    this.pageNum = Math.ceil(this.data.length / this.pageSize) //向上取整(無條件進位)取到最大頁數，餘數會算進下一頁。
    
    ---拿到後台數據後變歷並拆分數據給每頁---
    for(let i = 0 ; i < this.pageNum.length){  //遍歷每頁並分配數據
        this.totalPage[i] = this.data.slice(this.pageSize* i ,this.pageSize*(i+1)) //賦值給每頁數據
        ---※如果 i = 0 , this.pageSize = 6
        this.totalPage[0] = this.data.slice(6 * 0 , 6 * 1)  ==>默認第一頁顯示的數據
        ---※如果 i = 1 , this.pageSize = 6
        this.totalPage[1] = this.data.slice(6 * 1 , 6 * 2)  ==>默認第二頁顯示的數據
    }   

    this.dataShow = this.totalPage[this.currentPage]  //將分頁總數據賦值給新數組，後續可以進行遍歷渲染於頁面
    console.log(dataShow) ==>顯示目前默認this.currentPage = 0 被分割的數據
})

methods:{
    prevPage(){
        ---上一頁---
        if(this.currentPage == 0){ //如果當前頁面為0，按上一頁不繼續執行後續動作
            return;
        }else{
            this.datashow = this.totalPage[--this.currentPage] //給this.dataShow上一頁的數據
        }
    },
    nextPage(){
        ---下一頁---
        if(this.currentPage = this.pageNum -1){ //如果當前為最後一頁，則return不進行後續動作
            return;
        }else{
            this.dataShow = this.totalPage[++this.currentPage] //給this.dataShow下一頁的數據
        }
    },
    page(item){
        ---給分頁遍歷頁數---
        this.currentPage = item
        this.dataShow = this.totalPage[item-1]
        
    }
}

---HTML部分---

<button>上一頁</button>
<span @click="page(item)" v-for="(item,index) in dataShow" :key="inedx"></span>
<button>下一頁</button>